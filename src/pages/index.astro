---
import "../styles/global.css";
import BaseLayout from "../layout/BaseLayout.astro";
import Header from "../components/Header.astro";
import Hero from "../components/Hero.astro";

// Set page title for SEO
const pageTitle =
  "YouTube Earnings Calculator | Income Per View & Channel Stats";

// Get "channel" input from URL (example: ?channel=MrBeast or ?channel=@mrbeast)
const url = new URL(Astro.request.url);
const input = url.searchParams.get("channel");

// Clean user input: remove @ or get path from full URL
function cleanInput(raw) {
  const trimmed = raw.trim();
  if (trimmed.startsWith("http")) {
    try {
      const link = new URL(trimmed);
      return link.pathname.replace(/^\/+/, "");
    } catch {
      return trimmed;
    }
  }
  return trimmed.replace(/^@+/, "");
}

// Check if input is YouTube channel ID (starts with UC...) or handle/name
function detectInputType(value) {
  return /^UC[a-zA-Z0-9_-]{22}$/.test(value) ? "id" : "handleOrName";
}

// If input exists, process it and redirect to proper page
if (input) {
  const cleaned = cleanInput(input);
  const type = detectInputType(cleaned);

  if (type === "id") {
    // If input is a channel ID, fetch info from backend
    const apiUrl = `https://channelincome-backend.ytincome.workers.dev/?channel=${cleaned}`;
    const res = await fetch(apiUrl);
    const data = await res.json();

    if (data && (data.handle || data.title)) {
      const baseName = data.handle
        ? data.handle.replace(/^@+/, "")
        : data.title.toLowerCase().replace(/\s+/g, "");
      return Astro.redirect(`/${baseName}-net-worth`, 301);
    } else {
      // No data found, go to not-found page
      return Astro.redirect("/not-found");
    }
  }

  // If input is a handle or name, clean it and redirect
  const baseName = cleaned.replace(/\s+/g, "").replace(/^@+/, "");
  return Astro.redirect(`/${baseName}-net-worth`, 301);
}

const topChannels = [
  {
    name: "T-Series",
    slug: "tseries-net-worth",
    image:
      "https://yt3.ggpht.com/VunTf0NzCeboiPjbesBdnQuxaF3Lja7UGRbBGQAWRJgMSTj9TTLO3pS1X9qPOJGCNnmPrXeY=s800-c-k-c0x00ffffff-no-rj",
  },
  {
    name: "MrBeast",
    slug: "mrbeast-net-worth",
    image:
      "https://yt3.ggpht.com/nxYrc_1_2f77DoBadyxMTmv7ZpRZapHR5jbuYe7PlPd5cIRJxtNNEYyOC0ZsxaDyJJzXrnJiuDE=s800-c-k-c0x00ffffff-no-rj",
  },
  {
    name: "Cocomelon",
    slug: "cocomelon-net-worth",
    image:
      "https://yt3.ggpht.com/ytc/AIdro_lPfVIUJedPeT8Sa0sR1OoH3ehJFJC16RcyvFgvduFPp_k=s800-c-k-c0x00ffffff-no-rj",
  },
  {
    name: "SET India",
    slug: "setindia-net-worth",
    image:
      "https://yt3.ggpht.com/vmmZsYmryt238vqck4KAYf69gOSu22ZfqVE3rwT1tYz4hr68xl7crIUK7kghQgR6RiB9IlQ5mQ=s800-c-k-c0x00ffffff-no-rj",
  },
  {
    name: "Kids Diana Show",
    slug: "kidsdianashow-net-worth",
    image:
      "https://yt3.ggpht.com/ytc/AIdro_nuak4aeQJInwMJxsb8MNlnuOKktlhlLQQl_7tnWoSF5no=s800-c-k-c0x00ffffff-no-rj",
  },
  {
    name: "Like Nastya",
    slug: "likenastyaofficial-net-worth",
    image:
      "https://yt3.ggpht.com/ytc/AIdro_mVv_9v6t_6ni8YIQZWxmabSsNCVTyGQ48CHQ8-2W-OQtM=s800-c-k-c0x00ffffff-no-rj",
  },
  {
    name: "PewDiePie",
    slug: "pewdiepie-net-worth",
    image:
      "https://yt3.ggpht.com/vik8mAiwHQbXiFyKfZ3__p55_VBdGvwxPpuPJBBwdbF0PjJxikXhrP-C3nLQAMAxGNd_-xQCIg=s800-c-k-c0x00ffffff-no-rj",
  },
  {
    name: "Vlad and Niki",
    slug: "vladandniki-net-worth",
    image:
      "https://yt3.ggpht.com/il7dQx5fz3qs2ykOvWQVhtjT-_grY_oPmXlah13q694r_5zUS_7M33pBuUC34Cq0VearBaT1NOE=s800-c-k-c0x00ffffff-no-rj",
  },
  {
    name: "Zee Music Company",
    slug: "zeemusiccompany-net-worth",
    image:
      "https://yt3.ggpht.com/zGnrFUqmF6Xp2tM8ecG9sVXyHjJUrqa7GnNV_kATAdAvSwfgIg7693GURHASA7C6OPK3YmGZ=s800-c-k-c0x00ffffff-no-rj",
  },
  {
    name: "BLACKPINK",
    slug: "blackpink-net-worth",
    image:
      "https://yt3.ggpht.com/U3VrCkKjzTpQ3VYv4SCPjNfDHeJV-swGNnhLYhr0nV4lZz_GVUNzK4EB-HFRfKv9S5VNh14uAg=s800-c-k-c0x00ffffff-no-rj",
  },
];
---

<BaseLayout pageTitle={pageTitle}>
  <Header />
  <Hero />
  <div class="max-w-4xl mx-auto my-10 px-4">
    <h2 class="text-2xl font-semibold mb-6">Top YouTube Channels</h2>
    <div class="grid grid-cols-2 sm:grid-cols-4 md:grid-cols-5 gap-6">
      {
        topChannels.map((channel) => (
          <a
            href={`/${channel.slug}`}
            class="flex flex-col items-center text-center hover:underline"
            key={channel.slug}
          >
            <img
              src={channel.image}
              alt={`${channel.name} Profile`}
              class="w-20 h-20 rounded-full object-cover shadow-md"
              loading="lazy"
            />
            <span class="mt-2 font-medium text-gray-800">{channel.name}</span>
          </a>
        ))
      }
    </div>
  </div>
</BaseLayout>
